apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: core
  name: core
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: core
    spec:
      containers:
      - env:
        - name: BOOTSTRAP_TOKEN
          value: 7Q11Vz6R2J6BLAdO
        - name: DB_ENGINE
          value: mysql
        - name: DB_HOST
          value: mysql
        - name: DB_NAME
          value: jumpserver
        - name: DB_PASSWORD
          value: oM0aevSQaH8Bd2Bgg5cX8lOd
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          value: root
        - name: REDIS_HOST
          value: redis
        - name: SECRET_KEY
          value: B3f2w8P2PfxIAS7s4URrD9YmSbtqX4vXdPUL217kL9XPUOWrmy
        image: 'wojiushixiaobai/jms_core:1.5.4'
        name: jms-core
        ports:
        - containerPort: 8080
        - containerPort: 8070
        resources: {}
        tty: true
        volumeMounts:
        - mountPath: /opt/jumpserver/data/static
          name: static
        - mountPath: /opt/jumpserver/data/media
          name: media
        - mountPath: /opt/jumpserver/logs
          name: logs
      hostname: jms-core
      restartPolicy: Always
      volumes:
      - name: static
        persistentVolumeClaim:
          claimName: static
      - name: media
        persistentVolumeClaim:
          claimName: media
      - name: logs
        persistentVolumeClaim:
          claimName: logs
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose.yaml
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: core
  name: core
spec:
  ports:
  - name: "8070"
    port: 8070
    targetPort: 8070
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: core
status:
  loadBalancer: {}
